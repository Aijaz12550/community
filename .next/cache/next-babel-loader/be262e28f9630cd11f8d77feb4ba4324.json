{"ast":null,"code":"var _jsxFileName = \"/home/aijaz/nextjs/community-dashboard.git/components/signin/google.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport \"../../styles/signin/index.scss\"; // To federated sign in from Google\n\nexport class GoogleLogin extends Component {\n  constructor(props) {\n    super(props);\n    this.signIn = this.signIn.bind(this);\n  }\n\n  componentDidMount() {\n    const ga = window.gapi && window.gapi.auth2 ? window.gapi.auth2.getAuthInstance() : null;\n    if (!ga) this.createScript();\n  }\n\n  signIn() {\n    const ga = window.gapi.auth2.getAuthInstance();\n    ga.signIn().then(googleUser => {\n      console.log('google ===>', googleUser);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  createScript() {\n    // load the Google SDK\n    const script = document.createElement('script');\n    script.src = 'https://apis.google.com/js/platform.js';\n    script.async = true;\n    script.onload = this.initGapi;\n    document.body.appendChild(script);\n  }\n\n  initGapi() {\n    // init the Google SDK client\n    const g = window.gapi;\n    g.load('auth2', function () {\n      g.auth2.init({\n        client_id: '215485620819-r3ps1inqudcu9u0dvpeu6lrrfktd7dma.apps.googleusercontent.com',\n        // authorized scopes\n        scope: 'profile email openid'\n      });\n    });\n  }\n\n  render() {\n    return __jsx(\"button\", {\n      style: {\n        width: \"100%\"\n      },\n      className: \"google-login-btn\",\n      onClick: this.signIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"continue with Google\");\n  }\n\n}","map":{"version":3,"sources":["/home/aijaz/nextjs/community-dashboard.git/components/signin/google.js"],"names":["React","Component","GoogleLogin","constructor","props","signIn","bind","componentDidMount","ga","window","gapi","auth2","getAuthInstance","createScript","then","googleUser","console","log","error","script","document","createElement","src","async","onload","initGapi","body","appendChild","g","load","init","client_id","scope","render","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,gCAAP,C,CAEA;;AACC,OAAO,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AACxCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,EAAE,GAAGC,MAAM,CAACC,IAAP,IAAeD,MAAM,CAACC,IAAP,CAAYC,KAA3B,GACPF,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkBC,eAAlB,EADO,GAEP,IAFJ;AAGA,QAAI,CAACJ,EAAL,EAAS,KAAKK,YAAL;AACZ;;AAEDR,EAAAA,MAAM,GAAG;AACL,UAAMG,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkBC,eAAlB,EAAX;AACAJ,IAAAA,EAAE,CAACH,MAAH,GAAYS,IAAZ,CACIC,UAAU,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BF,UAA1B;AACH,KAHL,EAIIG,KAAK,IAAI;AACLF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH,KANL;AAQH;;AAGDL,EAAAA,YAAY,GAAG;AACX;AACA,UAAMM,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,IAAAA,MAAM,CAACG,GAAP,GAAa,wCAAb;AACAH,IAAAA,MAAM,CAACI,KAAP,GAAe,IAAf;AACAJ,IAAAA,MAAM,CAACK,MAAP,GAAgB,KAAKC,QAArB;AACAL,IAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA0BR,MAA1B;AACH;;AAEDM,EAAAA,QAAQ,GAAG;AACP;AACA,UAAMG,CAAC,GAAGnB,MAAM,CAACC,IAAjB;AACAkB,IAAAA,CAAC,CAACC,IAAF,CAAO,OAAP,EAAgB,YAAW;AACvBD,MAAAA,CAAC,CAACjB,KAAF,CAAQmB,IAAR,CAAa;AACTC,QAAAA,SAAS,EAAE,0EADF;AAET;AACAC,QAAAA,KAAK,EAAE;AAHE,OAAb;AAKH,KAND;AAOH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WAEQ;AAAQ,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAf;AAA+B,MAAA,SAAS,EAAC,kBAAzC;AAA4D,MAAA,OAAO,EAAE,KAAK7B,MAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFR;AAKH;;AArDuC","sourcesContent":["import React, { Component } from 'react';\n\nimport \"../../styles/signin/index.scss\";\n\n// To federated sign in from Google\n export class GoogleLogin extends Component {\n    constructor(props) {\n        super(props);\n        this.signIn = this.signIn.bind(this);\n    }\n\n    componentDidMount() {\n        const ga = window.gapi && window.gapi.auth2 ? \n            window.gapi.auth2.getAuthInstance() : \n            null;\n        if (!ga) this.createScript();\n    }\n\n    signIn() {\n        const ga = window.gapi.auth2.getAuthInstance();\n        ga.signIn().then(\n            googleUser => {\n                console.log('google ===>',googleUser)\n            },\n            error => {\n                console.log(error);\n            }\n        );\n    }\n\n    \n    createScript() {\n        // load the Google SDK\n        const script = document.createElement('script');\n        script.src = 'https://apis.google.com/js/platform.js';\n        script.async = true;\n        script.onload = this.initGapi;\n        document.body.appendChild(script);\n    }\n\n    initGapi() {\n        // init the Google SDK client\n        const g = window.gapi;\n        g.load('auth2', function() {\n            g.auth2.init({\n                client_id: '215485620819-r3ps1inqudcu9u0dvpeu6lrrfktd7dma.apps.googleusercontent.com',\n                // authorized scopes\n                scope: 'profile email openid'\n            });\n        });\n    }\n\n    render() {\n        return (\n            \n                <button style={{width:\"100%\"}} className=\"google-login-btn\" onClick={this.signIn}>continue with Google</button>\n           \n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}