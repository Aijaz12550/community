{"ast":null,"code":"var _jsxFileName = \"/home/aijaz/nextjs/community-dashboard.git/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Provider } from 'react-redux';\nimport App, { Container } from 'next/app';\nimport withRedux from 'next-redux-wrapper';\nimport { initStore } from '../redux/configureStore';\nimport { register } from 'next-offline/runtime';\nexport default withRedux(initStore, {\n  debug: true\n})(class MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    return {\n      pageProps: _objectSpread({}, Component.getInitialProps ? await Component.getInitialProps(ctx) : {})\n    };\n  }\n\n  componentDidMount() {\n    register();\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, __jsx(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, __jsx(Component, _extends({\n      store: store.getState()\n    }, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n});","map":{"version":3,"sources":["/home/aijaz/nextjs/community-dashboard.git/pages/_app.js"],"names":["Provider","App","Container","withRedux","initStore","register","debug","MyApp","getInitialProps","Component","ctx","pageProps","componentDidMount","render","store","props","getState"],"mappings":";;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,OAAOC,GAAP,IAAaC,SAAb,QAA8B,UAA9B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AAEA,eAAeF,SAAS,CAACC,SAAD,EAAY;AAACE,EAAAA,KAAK,EAAC;AAAP,CAAZ,CAAT,CACX,MAAMC,KAAN,SAAoBN,GAApB,CAAwB;AACpB,eAAaO,eAAb,CAA6B;AAACC,IAAAA,SAAD;AAAWC,IAAAA;AAAX,GAA7B,EAA6C;AACzC,WAAO;AACHC,MAAAA,SAAS,oBAEGF,SAAS,CAACD,eAAV,GACA,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CADN,GAEA,EAJH;AADN,KAAP;AASH;;AACDE,EAAAA,iBAAiB,GAAE;AACfP,IAAAA,QAAQ;AACX;;AACDQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEJ,MAAAA,SAAF;AAAaE,MAAAA,SAAb;AAAwBG,MAAAA;AAAxB,QAAkC,KAAKC,KAA7C;AACA,WACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AAAW,MAAA,KAAK,EAAEA,KAAK,CAACE,QAAN;AAAlB,OAAwCL,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CADJ,CADJ;AAOH;;AAxBmB,CADb,CAAf","sourcesContent":["import { Provider } from 'react-redux'\nimport App,{ Container } from 'next/app'\nimport withRedux from 'next-redux-wrapper'\nimport { initStore } from '../redux/configureStore'\nimport { register } from 'next-offline/runtime'\n\nexport default withRedux(initStore, {debug:true})(\n    class MyApp extends App {\n        static async getInitialProps({Component,ctx}){\n            return {\n                pageProps : {\n                \n                        ...(Component.getInitialProps\n                          ? await Component.getInitialProps(ctx)\n                          : {})\n                    \n                }\n            }\n        }\n        componentDidMount(){\n            register()\n        }\n        render() {\n            const { Component, pageProps, store } = this.props\n            return (\n                <Container>\n                    <Provider store={store} >\n                        <Component store={store.getState()} {...pageProps} />\n                    </Provider>\n                </Container>\n            )\n        }\n    }\n)"]},"metadata":{},"sourceType":"module"}