{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Container, InputGroup, InputGroupText, InputGroupAddon, Input } from \"reactstrap\";\nimport { routes } from \"../dashboardRoutes\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n    this.sidebarToggle = React.createRef();\n  }\n\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"dark\"\n      });\n    }\n\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  getBrand() {\n    let brandName = \"Default Brand\";\n    routes.map((prop, key) => {\n      //   if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n      //     brandName = prop.name;\n      //   }\n      return null;\n    });\n    return brandName;\n  }\n\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.sidebarToggle.current.classList.toggle(\"toggled\");\n  } // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n\n\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\"\n      });\n    } else {\n      this.setState({\n        color: \"transparent\"\n      });\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  } //   componentDidUpdate(e) {\n  //     if (\n  //       window.innerWidth < 993 &&\n  //       e.history.location.pathname !== e.location.pathname &&\n  //       document.documentElement.className.indexOf(\"nav-open\") !== -1\n  //     ) {\n  //       document.documentElement.classList.toggle(\"nav-open\");\n  //       this.sidebarToggle.current.classList.toggle(\"toggled\");\n  //     }\n  //   }\n\n\n  render() {\n    return (// add or remove classes depending if we are on full-screen-maps page or not\n      __jsx(Navbar, {\n        expand: \"lg\",\n        className: \"navbar-absolute fixed-top\",\n        style: {\n          background: \"white\",\n          borderBottom: \"2px solid lightgray\"\n        }\n      }, __jsx(Container, {\n        fluid: true\n      }, __jsx(\"div\", {\n        className: \"navbar-wrapper\"\n      }, __jsx(\"div\", {\n        className: \"navbar-toggle\"\n      }, __jsx(\"button\", {\n        type: \"button\",\n        ref: this.sidebarToggle,\n        className: \"navbar-toggler\",\n        onClick: () => this.openSidebar()\n      }, __jsx(\"span\", {\n        className: \"navbar-toggler-bar bar1\"\n      }), __jsx(\"span\", {\n        className: \"navbar-toggler-bar bar2\"\n      }), __jsx(\"span\", {\n        className: \"navbar-toggler-bar bar3\"\n      }))), __jsx(NavbarBrand, {\n        href: \"/\"\n      }, __jsx(\"p\", {\n        style: {\n          color: \"black\"\n        }\n      }, this.props.heading))), __jsx(NavbarToggler, {\n        onClick: this.toggle\n      }, __jsx(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\"\n      }), __jsx(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\"\n      }), __jsx(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\"\n      })), __jsx(Collapse, {\n        isOpen: this.state.isOpen,\n        navbar: true,\n        className: \"justify-content-end\"\n      }, __jsx(\"form\", null, __jsx(InputGroup, {\n        className: \"no-border\"\n      }, __jsx(Input, {\n        placeholder: \"Search...\"\n      }), __jsx(InputGroupAddon, {\n        addonType: \"append\"\n      }, __jsx(InputGroupText, null, __jsx(\"i\", {\n        className: \"fas fa-search\"\n      }))))), __jsx(Nav, {\n        navbar: true\n      }, __jsx(NavItem, null, __jsx(Link, {\n        href: \"/\"\n      }, __jsx(\"div\", {\n        className: \"nav-link btn-magnify\"\n      }, __jsx(\"i\", {\n        className: \"fas fa-list\"\n      }), __jsx(\"p\", null, __jsx(\"span\", {\n        className: \"d-lg-none d-md-block\"\n      }, \"Stats\"))))), __jsx(Dropdown, {\n        nav: true,\n        isOpen: this.state.dropdownOpen,\n        toggle: e => this.dropdownToggle(e)\n      }, __jsx(DropdownToggle, {\n        caret: true,\n        nav: true\n      }, __jsx(\"i\", {\n        className: \"fas fa-user\"\n      }), __jsx(\"p\", null, __jsx(\"span\", {\n        className: \"d-lg-none d-md-block\",\n        style: {\n          color: \"black\"\n        }\n      }, \"Some Actions\"))), __jsx(DropdownMenu, {\n        right: true\n      }, __jsx(DropdownItem, {\n        tag: \"a\"\n      }, \"Action\"), __jsx(DropdownItem, {\n        tag: \"a\"\n      }, \"Another Action\"), __jsx(DropdownItem, {\n        tag: \"a\"\n      }, \"Something else here\"))), __jsx(NavItem, null, __jsx(Link, {\n        href: \"/\"\n      }, __jsx(\"div\", {\n        className: \"nav-link btn-rotate\"\n      }, __jsx(\"i\", {\n        className: \"fas fa-user\"\n      }), __jsx(\"p\", null, __jsx(\"span\", {\n        className: \"d-lg-none d-md-block\"\n      }, \"Account\")))))))))\n    );\n  }\n\n}\n\nexport default Header;","map":null,"metadata":{},"sourceType":"module"}