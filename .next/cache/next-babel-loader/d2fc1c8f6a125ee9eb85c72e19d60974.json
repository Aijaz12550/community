{"ast":null,"code":"var _jsxFileName = \"/home/aijaz/nextjs/community-dashboard.git/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Provider } from \"react-redux\";\nimport App from \"next/app\";\nimport fetch from 'isomorphic-unfetch';\nimport withRedux from \"next-redux-wrapper\";\nimport { initStore } from \"../redux/configureStore\";\nimport { register } from \"next-offline/runtime\";\nexport default withRedux(initStore, {\n  debug: true\n})(class MyApp extends App {\n  // static async getInitialProps({ Component, ctx }) {\n  //   return {\n  //     pageProps: {\n  //       ...(Component.getInitialProps\n  //         ? await Component.getInitialProps(ctx)\n  //         : {})\n  //     }\n  //   };\n  // }\n  componentDidMount() {\n    register();\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store,\n      stars,\n      context\n    } = this.props;\n    return __jsx(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, __jsx(Component, {\n      store: store.getState(),\n      stars: stars,\n      context: context,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }));\n  }\n\n});\nexport async function getStaticProps(context) {\n  // Call an external API endpoint to get posts.\n  const res = await fetch('https://.../posts');\n  const posts = await res.json(); // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n\n  return {\n    stars: 'aijaz',\n    context\n  };\n}","map":{"version":3,"sources":["/home/aijaz/nextjs/community-dashboard.git/pages/_app.js"],"names":["Provider","App","fetch","withRedux","initStore","register","debug","MyApp","componentDidMount","render","Component","pageProps","store","stars","context","props","getState","getStaticProps","res","posts","json"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,SAAT;AACA,SAASC,QAAT,QAAyB,sBAAzB;AAEA,eAAeF,SAAS,CAACC,SAAD,EAAY;AAAEE,EAAAA,KAAK,EAAE;AAAT,CAAZ,CAAT,CACb,MAAMC,KAAN,SAAoBN,GAApB,CAAwB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAO,EAAAA,iBAAiB,GAAG;AAClBH,IAAAA,QAAQ;AACT;;AACDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA,KAAxB;AAA+BC,MAAAA,KAA/B;AAAsCC,MAAAA;AAAtC,QAAkD,KAAKC,KAA7D;AACA,WAEI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAW,MAAA,KAAK,EAAEA,KAAK,CAACI,QAAN,EAAlB;AAAoC,MAAA,KAAK,EAAEH,KAA3C;AAAkD,MAAA,OAAO,EAAEC,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ;AAOD;;AAtBqB,CADX,CAAf;AA6BA,OAAO,eAAeG,cAAf,CAA8BH,OAA9B,EAAuC;AAC5C;AACA,QAAMI,GAAG,GAAG,MAAMhB,KAAK,CAAC,mBAAD,CAAvB;AACA,QAAMiB,KAAK,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAApB,CAH4C,CAK5C;AACA;;AACA,SAAO;AACNP,IAAAA,KAAK,EAAC,OADA;AACQC,IAAAA;AADR,GAAP;AAGD","sourcesContent":["import { Provider } from \"react-redux\";\nimport App from \"next/app\";\nimport fetch from 'isomorphic-unfetch'\nimport withRedux from \"next-redux-wrapper\";\nimport { initStore } from \"../redux/configureStore\";\nimport { register } from \"next-offline/runtime\";\n\nexport default withRedux(initStore, { debug: true })(\n  class MyApp extends App {\n    // static async getInitialProps({ Component, ctx }) {\n    //   return {\n    //     pageProps: {\n    //       ...(Component.getInitialProps\n    //         ? await Component.getInitialProps(ctx)\n    //         : {})\n    //     }\n    //   };\n    // }\n    componentDidMount() {\n      register();\n    }\n    render() {\n      const { Component, pageProps, store ,stars, context } = this.props;\n      return (\n       \n          <Provider store={store}>\n            <Component store={store.getState()} stars={stars} context={context}  />\n          </Provider>\n      \n      );\n    }\n  }\n);\n\n\n\nexport async function getStaticProps(context) {\n  // Call an external API endpoint to get posts.\n  const res = await fetch('https://.../posts')\n  const posts = await res.json()\n\n  // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n  return {\n   stars:'aijaz',context\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}