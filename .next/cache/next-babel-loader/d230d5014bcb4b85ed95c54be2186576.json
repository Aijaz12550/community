{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aijaz/nextjs/community-dashboard.git/components/signin/google.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react'; // To federated sign in from Google\n\nexport var GoogleLogin = /*#__PURE__*/function (_Component) {\n  _inherits(GoogleLogin, _Component);\n\n  var _super = _createSuper(GoogleLogin);\n\n  function GoogleLogin(props) {\n    var _this;\n\n    _classCallCheck(this, GoogleLogin);\n\n    _this = _super.call(this, props);\n    _this.signIn = _this.signIn.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(GoogleLogin, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var ga = window.gapi && window.gapi.auth2 ? window.gapi.auth2.getAuthInstance() : null;\n      if (!ga) this.createScript();\n    }\n  }, {\n    key: \"signIn\",\n    value: function signIn() {\n      var ga = window.gapi.auth2.getAuthInstance();\n      ga === null || ga === void 0 ? void 0 : ga.signIn().then(function (googleUser) {\n        console.log('google ===>', googleUser);\n      }, function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"createScript\",\n    value: function createScript() {\n      // load the Google SDK\n      var script = document.createElement('script');\n      script.src = 'https://apis.google.com/js/platform.js';\n      script.async = true;\n      script.onload = this.initGapi;\n      document.body.appendChild(script);\n    }\n  }, {\n    key: \"initGapi\",\n    value: function initGapi() {\n      // init the Google SDK client\n      var g = window.gapi;\n      g.load('auth2', function () {\n        g.auth2.init({\n          client_id: '',\n          // authorized scopes\n          scope: 'profile email openid'\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"button\", {\n        className: \"google-login-btn\",\n        onClick: this.signIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, \"continue with Google\");\n    }\n  }]);\n\n  return GoogleLogin;\n}(Component);","map":{"version":3,"sources":["/home/aijaz/nextjs/community-dashboard.git/components/signin/google.js"],"names":["React","Component","GoogleLogin","props","signIn","bind","ga","window","gapi","auth2","getAuthInstance","createScript","then","googleUser","console","log","error","script","document","createElement","src","async","onload","initGapi","body","appendChild","g","load","init","client_id","scope"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAGA;;AACC,WAAaC,WAAb;AAAA;;AAAA;;AACG,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,+BAAd;AAFe;AAGlB;;AAJJ;AAAA;AAAA,wCAMuB;AAChB,UAAMC,EAAE,GAAGC,MAAM,CAACC,IAAP,IAAeD,MAAM,CAACC,IAAP,CAAYC,KAA3B,GACPF,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkBC,eAAlB,EADO,GAEP,IAFJ;AAGA,UAAI,CAACJ,EAAL,EAAS,KAAKK,YAAL;AACZ;AAXJ;AAAA;AAAA,6BAaY;AACL,UAAML,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkBC,eAAlB,EAAX;AACAJ,MAAAA,EAAE,SAAF,IAAAA,EAAE,WAAF,YAAAA,EAAE,CAAEF,MAAJ,GAAaQ,IAAb,CACI,UAAAC,UAAU,EAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BF,UAA1B;AACH,OAHL,EAII,UAAAG,KAAK,EAAI;AACLF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH,OANL;AAQH;AAvBJ;AAAA;AAAA,mCA0BkB;AACX;AACA,UAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,MAAAA,MAAM,CAACG,GAAP,GAAa,wCAAb;AACAH,MAAAA,MAAM,CAACI,KAAP,GAAe,IAAf;AACAJ,MAAAA,MAAM,CAACK,MAAP,GAAgB,KAAKC,QAArB;AACAL,MAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA0BR,MAA1B;AACH;AAjCJ;AAAA;AAAA,+BAmCc;AACP;AACA,UAAMS,CAAC,GAAGnB,MAAM,CAACC,IAAjB;AACAkB,MAAAA,CAAC,CAACC,IAAF,CAAO,OAAP,EAAgB,YAAW;AACvBD,QAAAA,CAAC,CAACjB,KAAF,CAAQmB,IAAR,CAAa;AACTC,UAAAA,SAAS,EAAE,EADF;AAET;AACAC,UAAAA,KAAK,EAAE;AAHE,SAAb;AAKH,OAND;AAOH;AA7CJ;AAAA;AAAA,6BA+CY;AACL,aAEQ;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAqC,QAAA,OAAO,EAAE,KAAK1B,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFR;AAKH;AArDJ;;AAAA;AAAA,EAAiCH,SAAjC","sourcesContent":["import React, { Component } from 'react';\n\n\n// To federated sign in from Google\n export class GoogleLogin extends Component {\n    constructor(props) {\n        super(props);\n        this.signIn = this.signIn.bind(this);\n    }\n\n    componentDidMount() {\n        const ga = window.gapi && window.gapi.auth2 ? \n            window.gapi.auth2.getAuthInstance() : \n            null;\n        if (!ga) this.createScript();\n    }\n\n    signIn() {\n        const ga = window.gapi.auth2.getAuthInstance();\n        ga?.signIn().then(\n            googleUser => {\n                console.log('google ===>',googleUser)\n            },\n            error => {\n                console.log(error);\n            }\n        );\n    }\n\n    \n    createScript() {\n        // load the Google SDK\n        const script = document.createElement('script');\n        script.src = 'https://apis.google.com/js/platform.js';\n        script.async = true;\n        script.onload = this.initGapi;\n        document.body.appendChild(script);\n    }\n\n    initGapi() {\n        // init the Google SDK client\n        const g = window.gapi;\n        g.load('auth2', function() {\n            g.auth2.init({\n                client_id: '',\n                // authorized scopes\n                scope: 'profile email openid'\n            });\n        });\n    }\n\n    render() {\n        return (\n            \n                <button className=\"google-login-btn\" onClick={this.signIn}>continue with Google</button>\n           \n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}