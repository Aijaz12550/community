{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Provider } from 'react-redux';\nimport App, { Container } from 'next/app';\nimport withRedux from 'next-redux-wrapper';\nimport { initStore } from '../redux/configureStore';\nimport { register } from 'next-offline/runtime';\nexport default withRedux(initStore, {\n  debug: true\n})(class MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    return {\n      pageProps: {\n        name: 'Aijaz'\n      }\n    };\n  }\n\n  componentDidMount() {\n    register();\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Container, null, __jsx(Provider, {\n      store: store\n    }, __jsx(Component, _extends({\n      data: 'hello'\n    }, pageProps))));\n  }\n\n});","map":null,"metadata":{},"sourceType":"module"}