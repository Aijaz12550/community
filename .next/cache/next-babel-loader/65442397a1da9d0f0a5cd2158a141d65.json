{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport { getToken } from \"./tokenHandler\";\nvar api = axios.create({\n  baseURL: process.env.api_base_url\n});\nvar token = getToken();\napi.CancelToken = axios.CancelToken;\napi.interceptors.request.use(function _callee(config) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (token) {\n            config.headers.Authorization = \"bearer \".concat(token);\n          }\n\n          return _context.abrupt(\"return\", config);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n});\nexport default api;","map":{"version":3,"sources":["/home/aijaz/nextjs/community-dashboard.git/configuration/httpInterceptor.js"],"names":["axios","getToken","api","create","baseURL","process","env","api_base_url","token","CancelToken","interceptors","request","use","config","headers","Authorization"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT;AAEA,IAAMC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADE,CAAb,CAAZ;AAIA,IAAIC,KAAK,GAAGP,QAAQ,EAApB;AAEAC,GAAG,CAACO,WAAJ,GAAkBT,KAAK,CAACS,WAAxB;AAEAP,GAAG,CAACQ,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA6B,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAC3B,cAAIL,KAAJ,EAAW;AACTK,YAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,oBAAyCP,KAAzC;AACD;;AAH0B,2CAKpBK,MALoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;AAQA,eAAeX,GAAf","sourcesContent":["import axios from \"axios\";\nimport { getToken } from \"./tokenHandler\";\n\nconst api = axios.create({\n  baseURL: process.env.api_base_url,\n});\n\nlet token = getToken();\n\napi.CancelToken = axios.CancelToken;\n\napi.interceptors.request.use(async (config) => {\n  if (token) {\n    config.headers.Authorization = `bearer ${token}`;\n  }\n\n  return config;\n});\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}