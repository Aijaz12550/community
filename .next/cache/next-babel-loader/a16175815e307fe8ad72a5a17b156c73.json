{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport { getToken } from \"./tokenHandler\";\n\nvar _axios = axios.create({\n  baseURL: process.env.api_base_url\n});\n\nvar token = getToken();\n_axios.CancelToken = axios.CancelToken;\n\n_axios.interceptors.request.use(function _callee(config) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (token) {\n            config.headers.Authorization = \"bearer \".concat(token);\n            config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\n            config.headers[\"Access-Control-Allow-Credentials\"] = true;\n          }\n\n          return _context.abrupt(\"return\", config);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n});\n\nexport { _axios };","map":null,"metadata":{},"sourceType":"module"}