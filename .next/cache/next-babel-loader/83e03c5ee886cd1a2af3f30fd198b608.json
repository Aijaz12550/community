{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aijaz/nextjs/community-dashboard.git/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Provider } from \"react-redux\";\nimport App from \"next/app\";\nimport fetch from 'isomorphic-unfetch';\nimport withRedux from \"next-redux-wrapper\";\nimport { initStore } from \"../redux/configureStore\";\nimport { register } from \"next-offline/runtime\";\nexport default withRedux(initStore, {\n  debug: true\n})( /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"componentDidMount\",\n    // static async getInitialProps({ Component, ctx }) {\n    //   return {\n    //     pageProps: {\n    //       ...(Component.getInitialProps\n    //         ? await Component.getInitialProps(ctx)\n    //         : {})\n    //     }\n    //   };\n    // }\n    value: function componentDidMount() {\n      register();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          store = _this$props.store,\n          stars = _this$props.stars,\n          ctx = _this$props.ctx;\n      return __jsx(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, __jsx(Component, {\n        store: store.getState(),\n        stars: stars,\n        ctx: ctx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return MyApp;\n}(App));\n\nApp.getInitialProps = function _callee(ctx) {\n  var res, json;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.github.com/repos/zeit/next.js'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context.sent;\n          console.log('ctx', ctx);\n          return _context.abrupt(\"return\", {\n            stars: 'Aijaz',\n            ctx: JSON.stringify(ctx)\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/home/aijaz/nextjs/community-dashboard.git/pages/_app.js"],"names":["Provider","App","fetch","withRedux","initStore","register","debug","props","Component","pageProps","store","stars","ctx","getState","getInitialProps","res","json","console","log","JSON","stringify"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,SAAT;AACA,SAASC,QAAT,QAAyB,sBAAzB;AAEA,eAAeF,SAAS,CAACC,SAAD,EAAY;AAAEE,EAAAA,KAAK,EAAE;AAAT,CAAZ,CAAT;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVW,wCAWS;AAClBD,MAAAA,QAAQ;AACT;AAbU;AAAA;AAAA,6BAcF;AAAA,wBAC6C,KAAKE,KADlD;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAAA,UACuBC,KADvB,eACuBA,KADvB;AAAA,UAC8BC,KAD9B,eAC8BA,KAD9B;AAAA,UACqCC,GADrC,eACqCA,GADrC;AAEP,aAEI,MAAC,QAAD;AAAU,QAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD;AAAW,QAAA,KAAK,EAAEA,KAAK,CAACG,QAAN,EAAlB;AAAoC,QAAA,KAAK,EAAEF,KAA3C;AAAkD,QAAA,GAAG,EAAEC,GAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFJ;AAOD;AAvBU;;AAAA;AAAA,EACOX,GADP,EAAf;;AA8BAA,GAAG,CAACa,eAAJ,GAAsB,iBAAMF,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACFV,KAAK,CAAC,2CAAD,CADH;;AAAA;AACda,UAAAA,GADc;AAAA;AAAA,2CAEDA,GAAG,CAACC,IAAJ,EAFC;;AAAA;AAEdA,UAAAA,IAFc;AAGpBC,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBN,GAAlB;AAHoB,2CAIb;AAAED,YAAAA,KAAK,EAAE,OAAT;AAAiBC,YAAAA,GAAG,EAAEO,IAAI,CAACC,SAAL,CAAeR,GAAf;AAAtB,WAJa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB","sourcesContent":["import { Provider } from \"react-redux\";\nimport App from \"next/app\";\nimport fetch from 'isomorphic-unfetch'\nimport withRedux from \"next-redux-wrapper\";\nimport { initStore } from \"../redux/configureStore\";\nimport { register } from \"next-offline/runtime\";\n\nexport default withRedux(initStore, { debug: true })(\n  class MyApp extends App {\n    // static async getInitialProps({ Component, ctx }) {\n    //   return {\n    //     pageProps: {\n    //       ...(Component.getInitialProps\n    //         ? await Component.getInitialProps(ctx)\n    //         : {})\n    //     }\n    //   };\n    // }\n    componentDidMount() {\n      register();\n    }\n    render() {\n      const { Component, pageProps, store ,stars, ctx } = this.props;\n      return (\n       \n          <Provider store={store}>\n            <Component store={store.getState()} stars={stars} ctx={ctx}  />\n          </Provider>\n      \n      );\n    }\n  }\n);\n\n\n\n\nApp.getInitialProps = async ctx => {\n  const res = await fetch('https://api.github.com/repos/zeit/next.js')\n  const json = await res.json()\n  console.log('ctx',ctx)\n  return { stars: 'Aijaz',ctx: JSON.stringify(ctx) }\n}\n\n"]},"metadata":{},"sourceType":"module"}