{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  field: \"test Auth reducer\"\n};\n\nvar AllUsersReducer = function AllUsersReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ALLUSERS\":\n      return _objectSpread({}, state, {\n        allUsers: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport { AllUsersReducer };","map":{"version":3,"sources":["/home/aijaz/nextjs/community-dashboard.git/redux/reducers/usersReducers.js"],"names":["initialState","field","AllUsersReducer","state","action","type","allUsers","payload"],"mappings":";;;;;;AAAA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;;AAIE,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,+BACKF,KADL;AAEEG,QAAAA,QAAQ,EAAEF,MAAM,CAACG;AAFnB;;AAIF;AACE,aAAOJ,KAAP;AAPJ;AASD,CAVD;;AAYA,SAASD,eAAT","sourcesContent":["const initialState = {\n    field: \"test Auth reducer\"\n  };\n  \n  const AllUsersReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case \"ALLUSERS\":\n        return {\n          ...state,\n          allUsers: action.payload\n        };\n      default:\n        return state;\n    }\n  };\n  \n  export { AllUsersReducer };\n  "]},"metadata":{},"sourceType":"module"}