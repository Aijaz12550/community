{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { allUsers } from \"../actions\";\nimport { _axios } from \"../../configuration\";\nimport { getAllUsers } from \"../../configuration\";\nexport var getUsers = function getUsers(payload) {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(_axios.get(getAllUsers).then(function (data) {\n              console.log('data ===>> all users', data);\n              dispatch(allUsers(data));\n            })[\"catch\"](function (error) {\n              console.log('error', error);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/home/aijaz/nextjs/community-dashboard.git/redux/middleware/users.js"],"names":["allUsers","_axios","getAllUsers","getUsers","payload","dispatch","get","then","data","console","log","error"],"mappings":";AAAA,SAASA,QAAT;AACA,SAAQC,MAAR;AACA,SAASC,WAAT;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,OAAD,EAAa;AACjC,SAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACEJ,MAAM,CAACK,GAAP,CAAWJ,WAAX,EAAwBK,IAAxB,CAA6B,UAAAC,IAAI,EAAE;AACpCC,cAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCF,IAAnC;AACAH,cAAAA,QAAQ,CAACL,QAAQ,CAACQ,IAAD,CAAT,CAAR;AACH,aAHI,WAGI,UAAAG,KAAK,EAAI;AACdF,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBC,KAApB;AACH,aALI,CADF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAQH,CATM","sourcesContent":["import { allUsers } from \"../actions\";\nimport {_axios} from \"$config\";\nimport { getAllUsers } from \"$config\";\n\nexport const getUsers = (payload) => {\n    return async (dispatch) => {\n       await _axios.get(getAllUsers).then(data=>{\n            console.log('data ===>> all users',data)\n            dispatch(allUsers(data))\n        }).catch(error => {\n            console.log('error',error)\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}